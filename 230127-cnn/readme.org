#+options: ':nil *:t -:t ::t <:t H:3 \n:nil ^:{} arch:headline
#+options: author:t broken-links:mark c:nil creator:nil
#+options: d:(not "LOGBOOK") date:t e:t email:nil f:t inline:t num:t
#+options: p:nil pri:nil prop:nil stat:t tags:t tasks:t tex:t
#+options: timestamp:t title:t toc:t todo:t |:t
#+title: Correlation and Convolution in neural networks derivation
#+date: <2023-01-27 Fri>
#+author: Nasy
#+email: nasyxx@gmail.com
#+language: en
#+select_tags: export
#+exclude_tags: noexport
#+creator: Emacs 29.0.50 (Org mode 9.5.5)
#+cite_export: biblatex
#+columns: %45ITEM %10BEAMER_env(Env) %10BEAMER_act(Act) %4BEAMER_col(Col) %8BEAMER_opt(Opt)

#+setupfile: https://raw.githubusercontent.com/uta-smile/beamer-theme/master/setup.org

#+latex_header_extra: \usepackage{minted}

* Introduction

** Correlation and Convolution

*** Two operators $\ast$ and $\star$

+ \((f\star g)(\tau ) := \int _{-\infty }^{\infty }f(t)g(t+\tau )dt\)
+ \((f*g)(\tau) := \int _{-\infty }^{\infty }f(t)g(\tau-t )dt\)

And for discrete functions:

+ \((f\star g)(\tau ) := \sum _{-\infty }^{\infty }f(t)g(t+\tau )\)
+ \((f*g)(\tau) := \sum _{-\infty }^{\infty }f(t)g(\tau-t )\)

*Why?*

*** Problem 1

Two signals $f$ and $g$ are given.  They are from a same audio source, but there is a difference in the time when the recording was started.
We want to align them.

+ \(f(x) = \alpha \sin(x)\)
+ \(g(x) = \beta \cos(x)\)

[[./p1.png]]

*** Problem 1

**** DESC                                                 :BMCOL:
:PROPERTIES:
:BEAMER_col: 0.4
:END:

Two signals $f$ and $g$ are given.  They are from the same piece of audio, but there is a difference in the time when the recording was started.
We want to align them.

+ Same source, same crests and troughs.
+ Keep \(f\), shift \(g\) to align with \(f\).
+ \(arg \max_{\Delta t} \sum_{-infty}^{infty}f(t)g(t + \Delta t)\)

**** PIC                                                  :BMCOL:
:PROPERTIES:
:BEAMER_col: 0.5
:END:

[[./p2.png]]

*** Problem 2

There is a function that describes the case where Mr. N is hit.

\[f(t) = 0, 0, 0, 1, 0, 0, 0, ...\]

And a function describing the change in pain after being hit.

\[g(t) = 3, 2, 1, 0\]

We want a function \(h(t)\) to describe the pain of Mr. N.

*** Problem 2

**** L                                                    :BMCOL:
:PROPERTIES:
:BEAMER_col: 0.4
:END:

There is a function that describes the case where Mr. N is hit.

\[f(t) = 0, 0, 0, 1, 0, 0, 0, ...\]

And a function describing the change in pain after being hit.

\[g(t) = 3, 2, 1;\ t \in \{0, 1, 2\}\]
\[g(t) = 0;\ t \in others\]

We want a function \(h(\tau)\) to describe the pain of Mr. N.

**** R                                                    :BMCOL:
:PROPERTIES:
:BEAMER_col: 0.5
:END:

+ Pain = hit * pain
+ At the first time hit, where \(f(t) = f(3) = 1\), the pain is \(g(0) = 3\).
+ Next, the pain is \(g(1) = 2\), and so on.

Obviously

\[h(\tau) = 0, 0, 0, 3, 2, 1, 0, 0, ...\]

What if \(f(t) = 0, 0, 1, 1, 0, 0, ...\)?

\[h(\tau) = 0, 0, 3, 5, 3, 1, 0, 0, ...\]

+ \(h(\tau) = \sum f(t)g(\tau - t)\)

* CNN

*** Forward (1D)

+ Correlation :: \(\mathtt {Input}(a) \star \mathtt {kernel (filter)}(w) = \mathtt {output}(z)\)

\[[0, 1, 2, 3] \star [1,2] = [0 \times 1 + 1 \times 2, 1 \times 1 + 2 \times 2, 2 \times 1 + 3 \times 2] = [2, 5, 8]\]

\[[a_{1}, a_{2}, a_{3}, a_{4}] \star [w_{1}, w_{2}, w_{3}] = [a_{1} \times w_{1} + a_{2} \times w_{2} + a_{3} \times w_{3},\ a_{2} \times w_{1} + a_{3} \times w_{2} + a_{4} \times w_{3}] = [z_{1}, z_{2}]\]

*** Backward (1D)

The \(\delta_{i}\) is the gradient from the next layer at point \(i\).  And \(J\) is the loss function.

\[\frac{\partial J}{\partial a_{i}} = \sum_{j} \frac{\partial J}{\partial z_{j}} \frac{\partial z_{j}}{\partial a_{i}} = \sum_{j} \delta_{j} w_{j}\]

Thus,

\[\frac{\partial J}{\partial a_{1}} = \delta_{1} w_{1}\]

\[ \frac{\partial J}{\partial a_{2}} = \delta_{1} w_{2} + \delta_{2} w_{1}\]

\[\frac{\partial J}{\partial a_{3}} = \delta_{1} w_{3} + \delta_{2} w_{2}\]

\[ \frac{\partial J}{\partial a_{4}} = \delta_{2} w_{3}\]

\[[\delta_{1}w_{1}, \delta_{1}w_{2} + \delta_{2}w_{1}, \delta_{1}w_{3} + \delta_{2}w_{2}, \delta_{2}w_{3}]\]

*** Bcakward (1D)

\[\frac{\partial J}{\partial a_{1}} = 0w_{3} + 0w_{2} + \delta_{1} w_{1}\]

\[ \frac{\partial J}{\partial a_{2}} = 0w_{3} + \delta_{1} w_{2} + \delta_{2} w_{1}\]

\[\frac{\partial J}{\partial a_{3}} = \delta_{1} w_{3} + \delta_{2} w_{2} + 0w_{1}\]

\[ \frac{\partial J}{\partial a_{4}} = \delta_{2} w_{3} + 0w_{2} + 0w_{1}\]

\[[0, 0, \delta_{1}, \delta_{2}, 0, 0] \ast [w_{1}, w_{2}, w_{3}]\]
\[= [0, 0, \delta_{1}, \delta_{2}, 0, 0] \star [w_{3}, w_{2}, w_{1}] = [\delta_{1}w_{1}, \delta_{1}w_{2} + \delta_{2}w_{1}, \delta_{1}w_{3} + \delta_{2}w_{2}, \delta_{2}w_{3}]\]

*** 2D correlation and convolution

+ Correlation :: \(\mathtt {Input} \star \mathtt {kernel (filter)} = \mathtt {output}\)

#+attr_latex: :height 2cm
[[./p3.png]]

The shadow part:

\(0 \times 0 + 1 \times 1 + 3 \times 2 + 4 \times 3 = 19\)

+ Convolutions :: \(\mathtt {Input} * \mathtt {kernel (filter)} = \mathtt {Input} \star flip(\mathtt {kernel (filter)}) = \mathtt {output}\)

#+attr_latex: :height 2cm
[[./p4.png]]

*** Forward (2D)

+ Correlation :: \(\mathtt {Input}(a) \star \mathtt {kernel (filter)}(w) = \mathtt {output}(z)\)

#+begin_equation
\begin{bmatrix}
a_{11}&a_{12}&a_{13} \\
a_{21}&a_{22}&a_{23}\\
a_{31}&a_{32}&a_{33}
\end{bmatrix} \star
\begin{bmatrix}
w_{11}&w_{12}\\
w_{21}&w_{22}
\end{bmatrix} =
\begin{bmatrix}
z_{11}&z_{12}\\
z_{21}&z_{22}
\end{bmatrix}
#+end_equation

\[z_{11} = a_{11}w_{11} + a_{12}w_{12} + a_{21}w_{21} +   a_{22}w_{22}\]
\[z_{12} = a_{12}w_{11} + a_{13}w_{12} + a_{22}w_{21} +   a_{23}w_{22}\]
\[z_{21} = a_{21}w_{11} + a_{22}w_{12} + a_{31}w_{21} +   a_{32}w_{22}\]
\[z_{22} = a_{22}w_{11} + a_{23}w_{12} + a_{32}w_{21} +   a_{33}w_{22}\]

*** Backward (2D)

\[\nabla a^{l-1} = \frac{\partial e}{\partial a^{l-1}} = \frac{\partial e}{\partial z^{l}} \frac{\partial z^{l}}{\partial a^{l-1}} = \delta^{l} \frac{\partial z^{l}}{\partial a^{l-1}} = \delta^{l} W\]

\[\nabla a_{11} = \delta_{11}w_{11}\]

\[\nabla a_{12} = \delta_{11}w_{12} + \delta_{12}w_{11}\]

\[\nabla a_{13} = \delta_{12}w_{12}\]

#+begin_equation
\begin{bmatrix}
0&0&0&0 \\
0&\delta_{11}& \delta_{12}&0\\
0&\delta_{21}&\delta_{22}&0 \\
0&0&0&0
\end{bmatrix} \star
\begin{bmatrix}
w_{22}&w_{21}\\
w_{12}&w_{11}
\end{bmatrix} =
\begin{bmatrix}
\nabla a_{11}&\nabla a_{12}&\nabla a_{13} \\
\nabla a_{21}&\nabla a_{22}&\nabla a_{23}\\
\nabla a_{31}&\nabla a_{32}&\nabla a_{33}
\end{bmatrix}
#+end_equation

* Conv and Corr Calculations

*** Conv and Corr General Calculation

\[\mathtt {Input}(a) \star \mathtt {kernel (filter)}(w) = \mathtt {output}(z)\]

+ Basic method :: Direct calculation

\[\sum_{i=1}^{n} a_{i}w_{i} = z\]

It's an inner product! \(<A, W>\).  And the time complexity is \(O(n^{2})\) = \(O(N_{A} M_{W})\).

+ Faster one :: FFT

\[y[n]=f[n]*g[n]\leftrightarrow Y[f]=F[f]G[f]\]

The time complexity is \(O(n\log_{2}n)\)

* Conclusion

*** Conclusion

+ Correlation
+ Convolution
+ Forward and Backward
+ Conv and Corr Calculations
